%% EQ 15 and 16 IMPLEMENTATION - VARY BETA ONLY, BUILDING OFF CURVE 'a' IN FIGURE 5

fig5_beta = linspace(0.2, 35, 18); 

e16_x_5 = cell(1, length(fig5_beta)); 
e16_y_5 = cell(1, length(fig5_beta)); 
e16_t_5 = cell(1, length(fig5_beta));
tempindex = zeros(1, length(fig5_beta));
e16_Tp_5 = zeros(1, length(fig5_beta));
int_list = zeros(1, length(fig5_beta));

fprintf("\n");
fprintf("FIGURE 5\n");

% Generate data
for i = 1:length(fig5_beta)
    [e16_t_5{i}, e16_x_5{i}, e16_y_5{i}] = madix_sim_eq16(fig5_beta(i));
    [~, tempindex(i)] = max(e16_y_5{i});
    e16_Tp_5(i) = e16_x_5{i}(tempindex(i));
    fprintf("Peak Temp for B = %.4f\n", fig5_beta(i));
    fprintf("   %.2f C\n\n", e16_Tp_5(i) - 273);
end

% Plot desorption curves
figure;
hold on;
for i = 1:length(fig5_beta)
    plot(e16_x_5{i}, e16_y_5{i}, 'DisplayName', sprintf('Beta = %.3f', fig5_beta(i)));  % Plot desorption curves
    int_list(i) = trapz(e16_t_5{i}, e16_y_5{i});
    fprintf('%.4f\n', int_list(i)); % Fixed fprintf format specifier
end
hold off;

% Add labels and title
xlabel('Temperature (K)');
ylabel('Rate = -dN/dt');
title('Desorption Rate vs. Temperature for Different Beta Values, N = 0.005');
legend show;
grid on;

% Additional analysis (unchanged)
Np = zeros(1, length(fig5_beta));
for i = 1:length(fig5_beta)
    [Np(i), ~] = max(e16_y_5{i}); % Get the peak amplitude
end

y_e16 = log(Np);
x_e16 = 1 ./ e16_Tp_5;

scatter(x_e16, y_e16);

e16_p = polyfit(x_e16, y_e16, 1);
e16_m = e16_p(1);
e16_b = e16_p(2);

y_e16_fit = polyval(e16_p, x_e16);

figure;
plot(x_e16, y_e16, 'bo', 'DisplayName', 'Data');
hold on;
plot(x_e16, y_e16_fit, 'r-', 'DisplayName', sprintf('Fitted Line: y = %.2fx + %.2f', e16_m, e16_b));
hold off;

xlabel('1/Tp');
ylabel('ln(Np)');
title('Equation 16');
legend show;
grid on;

kcal_to_j = 4184;
R = 8.314;

fprintf('Equation 16, Ea = %.2f', (-e16_m * R) / kcal_to_j);
fprintf(' kcal/mol \n');

% Now calculating frequency factor; first need coverage at peak
time_to_peak = zeros(1, length(fig5_beta));
for i = 1:length(fig5_beta)
    time_to_peak(i) = e16_t_5{1, i}(tempindex(i));
end

N_to_peak = zeros(1, length(fig5_beta));
for i = 1:length(fig5_beta)
    lol = linspace(0, time_to_peak(i), 10000); % Totally unoptimized code that returns the integral of the desorption peak up until the peak
    lmao = trapz(lol, e16_y_5{i});
    N_to_peak(i) = lmao;
    fprintf('%.4f\n', lmao);
end

tempx = zeros(1, length(fig5_beta));
tempy = zeros(1, length(fig5_beta));
for i = 1:length(fig5_beta)
    tempx(i) = 1 / e16_Tp_5(i);
    tempy(i) = log(fig5_beta(i) / e16_Tp_5(i)^2); 
end

p = polyfit(tempx, tempy, 1);
m = p(1); % Slope
b = p(2); % Intercept

fitted_y = polyval(p, tempx);

figure;
plot(tempx, tempy, 'bo', 'DisplayName', 'Data'); % Original data
hold on;
plot(tempx, fitted_y, 'r-', 'DisplayName', sprintf('Fitted Line: y = %.2fx + %.2f', m, b)); % Fitted line
hold off;

fprintf('Equation 15, Ea = %.2f', (-m * R) / kcal_to_j);
fprintf(' kcal/mol \n');

xlabel('1/Tp');
ylabel('ln(Beta/Tp^2)');
title('Equation 15');
legend show;
grid on;




%% 3/18 - Cox Lambert '81 Test 

[t,x,y] = polyani_wigner(50,50,247*10^3,0,10^13,1.3,1500); %third variable is Ea in j/mol

plot(x,y);

%3/18, It works

%% 3/18 - Fig 5, Cox Lambert '81
fprintf('NEW INSTANCE \n');

Rh111_rho = 1.6 * 10 ^19; %Looked up 111 FCC surface area and Rh lattice constant 

Cl_dose = [0.4,0.8,1.2,2.0,2.8,4.0,8.0] .* 10^19; 

N0_span = Cl_dose ./ Rh111_rho;

[ti_span, x_span,y_span] = deal(cell(1,length(N0_span)));


for i=1:length(N0_span)
    [ti_span{i},x_span{i},y_span{i}] = polyani_wigner(50,50,247*10^3,0,10^13,N0_span(i),1500);
    plot(x_span{i},y_span{i},'DisplayName, sprintf('N = %.3f', ))

